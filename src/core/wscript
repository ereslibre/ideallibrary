# This file is part of the Ideal Library
# Copyright (C) 2011 Rafael Fernández López <ereslibre@ereslibre.es>
#
# This library is free software; you can redistribute it and/or
# modify it under the terms of the GNU Library General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version.
#
# This library is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.	See the GNU
# Library General Public License for more details.
#
# You should have received a copy of the GNU Library General Public License
# along with this library; see the file COPYING.LIB.  If not, write to
# the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
# Boston, MA 02110-1301, USA.

import Options

checkInotify = '''#include <sys/inotify.h>
		  int main(int argc, char **argv)
		  {
		      return 0;
		  }'''

def configure(conf):
    if not Options.options.release:
        conf.sub_config('tests')

    conf.env['LIB_CORE'] = ['dl', 'pthread']

    if conf.env['DEST_OS'] == 'linux':
        conf.env['LIB_CORE'] += ['rt']

    conf.check_cfg(package = 'libpcre', args = '--cflags --libs')

    if not conf.env['HAVE_LIBPCRE'] == 1:
        conf.fatal('Cannot continue without libpcre. Please, install the development package and try again')

    conf.check(fragment = checkInotify, msg = 'Checking for inotify', define_name = 'HAVE_INOTIFY')

def build(bld):
    obj = bld(features = 'cxx cxxshlib',
              source   = bld.path.ant_glob('*.cpp') +
              bld.path.ant_glob('interfaces/*.cpp') +
              bld.path.ant_glob('private/*.cpp'),
              target   = 'idealcore',
              includes = '..',
              uselib   = ['CORE',
                          'LIBPCRE'],
              vnum     = bld.env['LIBVERSION'])

    if bld.env['DEST_OS'] in bld.env['POSIX_PLATFORMS']:
        obj.source += bld.path.ant_glob('private/posix/*.cpp')

    bld(features = 'subst',
        source	 = 'idealcore.pc.in',
        target	 = 'idealcore.pc',
        PREFIX	 = bld.env['PREFIX'],
        LIBS	 = '-lidealcore',
        VERSION	 = bld.env['LIBVERSION'])

    bld.install_files('${PREFIX}/lib/pkgconfig', 'idealcore.pc')
    bld.install_files('${PREFIX}/include/ideal/core', bld.path.ant_glob('*.h'))
    bld.install_files('${PREFIX}/include/ideal/core/interfaces', bld.path.ant_glob('interfaces/*.h'))

    if not bld.env['RELEASE']:
        bld.add_subdirs('tests')
